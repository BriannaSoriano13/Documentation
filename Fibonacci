package com.example.textanalyzer;

import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.concurrent.TimeUnit;

public class Fio {

    public static int fibonacci(int n) {
        int f0 = 0;
        int f1 = 1;
        int fn = 1;

        if (n < 0) {
            return -1;
        } else if (n == 0 || n == 1) {
            return n;
        } else {
            for (int i = 2; i < n; i++) {
                f0 = f1;
                f1 = fn;
                fn = f0 + f1;
            }
        }
        return fn;
    }

    public static int fibonacciRecur(int n)
    {
        if (n <= 1)
            return n;
        return fibonacciRecur(n - 1) + fibonacciRecur(n - 2);
    }

    static void test(int n,boolean print){

        System.out.println( n + " fibonacci: ");

        long startTime = System.nanoTime();
        if(print){
            for(int i = 0 ; i< n;i++){
                System.out.print(fibonacci(i) + " ");
            }
        }

        long endTime   = System.nanoTime();
        long totalTime = endTime - startTime;
        System.out.println("\nTime: " + totalTime + " nano");



        System.out.println(n + " fibonacci recursion: ");

        startTime = System.nanoTime();
        if(print){
            for(int i = 0 ; i< n;i++){
                System.out.print(fibonacciRecur(i) + " ");
            }
        }
        endTime   = System.nanoTime();
        totalTime = endTime - startTime;
        System.out.println("\nTime: " + totalTime + " nano");
        System.out.println("\n\n");
    }

    public static void main(String[] args) {
        test(1,true);
        test(10,true);
        test(20,true);
        test(30,true);
        //test(1000,true);
        //test(10000,true);

    }

}
